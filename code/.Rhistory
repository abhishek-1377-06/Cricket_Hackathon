df$batting_position <- NULL
training_row_nos <- floor(0.8*nrow(df))
test_row_nos <- training_row_nos + 1
train_df <- df[1:training_row_nos,]
test_df <- df[test_row_nos:nrow(df),]
#### Model 3: Random Forest
sapply(train_df, function(x) length(which(is.na(x))))
library(randomForest)
for_1<- randomForest(X4s~.,data= train_df)
for_1<- randomForest(X4s~.,data= train_df)
for_1<- randomForest('X4s'~.,data= train_df)
for_1<- randomForest(X4s~.,data= train_df)
for_1<- randomForest(X4s~.,data= train_df)
colnames(train_df)
str(df)
df <- indian_squad_odi_stats %>% filter(player_name == 'V Kohli')
df$city <- NULL
df$batting_position <- NULL
df$match_format <- as.factor(df$match_format)
df$venue <- as.factor(df$venue)
df$opposition <- as.factor(df$opposition)
training_row_nos <- floor(0.8*nrow(df))
test_row_nos <- training_row_nos + 1
train_df <- df[1:training_row_nos,]
test_df <- df[test_row_nos:nrow(df),]
#### Model 3: Random Forest
sapply(train_df, function(x) length(which(is.na(x))))
independent_variables <- 'balls_faced + strike_rate + ratio_of_matches_played_last_year +
centuries_last_year + X4s + X6s + innings_number + runs_scored_last_year +
half_centuries_last_year + avg_last_year + match_format + venue + opposition'
library(randomForest)
for_1<- randomForest(X4s~.,data= train_df)
levels(df$venue)
independent_variables <- 'balls_faced + strike_rate + ratio_of_matches_played_last_year +
centuries_last_year + X4s + X6s + innings_number + runs_scored_last_year +
half_centuries_last_year + avg_last_year + match_format + opposition'
library(randomForest)
for_1<- randomForest(X4s~.,data= train_df)
levels(df$opposition)
summary(df)
for_1<- randomForest(X4s~balls_faced + strike_rate + ratio_of_matches_played_last_year +
centuries_last_year + X6s + innings_number + runs_scored_last_year +
half_centuries_last_year + avg_last_year + match_format + opposition,data= train_df)
Prediction_3 <- predict(for_1, newdata= test_df)
rmse(test_df$X4s,log(Prediction_3))
RMSE(test_df$X4s,log(Prediction_3))
RMSE(test_df$X4s,Prediction_3)
as.data.frame(test_df$X4s,Prediction_3)
test_df$X4s
Prediction_3
Prediction_3 <- predict(for_1, newdata= test_df) %>% round(digits = 0)
Prediction_3
cbind(test_df$X4s,Prediction_3)
for_1<- randomForest(X4s~balls_faced + strike_rate + ratio_of_matches_played_last_year +
centuries_last_year + X6s + innings_number + runs_scored_last_year +
half_centuries_last_year + avg_last_year + match_format + opposition,
ntree = 500, data= train_df)
Prediction_3 <- predict(for_1, newdata= test_df) %>% round(digits = 0)
cbind(test_df$X4s,Prediction_3)
for_1<- randomForest(X4s~balls_faced + strike_rate + ratio_of_matches_played_last_year +
centuries_last_year + X6s + innings_number + runs_scored_last_year +
half_centuries_last_year + avg_last_year + match_format + opposition,
ntree = 5000, data= train_df)
Prediction_3 <- predict(for_1, newdata= test_df) %>% round(digits = 0)
cbind(test_df$X4s,Prediction_3)
RMSE(test_df$X4s,Prediction_3)
for_1<- randomForest(X4s~balls_faced + strike_rate + ratio_of_matches_played_last_year +
centuries_last_year + X6s + innings_number + runs_scored_last_year +
half_centuries_last_year + avg_last_year + match_format + opposition,
ntree = 1000, data= train_df)
Prediction_3 <- predict(for_1, newdata= test_df) %>% round(digits = 0)
cbind(test_df$X4s,Prediction_3)
model_rf <- randomForest(X4s~balls_faced + strike_rate + ratio_of_matches_played_last_year +
centuries_last_year + X6s + innings_number + runs_scored_last_year +
half_centuries_last_year + avg_last_year + match_format + opposition,
ntree = 1000, data= train_df)
predicted_4s <- predict(model_rf, test_df) %>% round(digits = 0)
cbind(test_df$X4s,predicted_4s)
RMSE(test_df$X4s,predicted_4s)
View(train_df)
View(test_df)
model_rf
model_rf <- randomForest(X4s~balls_faced + strike_rate + ratio_of_matches_played_last_year +
centuries_last_year + X6s + innings_number + runs_scored_last_year +
half_centuries_last_year + avg_last_year + match_format + opposition,
ntree = 1000, mtry=10, data= train_df)
predicted_4s <- predict(model_rf, test_df) %>% round(digits = 0)
cbind(test_df$X4s,predicted_4s)
RMSE(test_df$X4s,predicted_4s)
train[,-'X4s']
train[,~'X4s']
train<- as.matrix(train_df, rownames.force=NA)
test<- as.matrix(test_df, rownames.force=NA)
train <- as(train, "sparseMatrix")
test <- as(test, "sparseMatrix")
View(train)
train<- as.matrix(train_df, rownames.force=NA)
test<- as.matrix(test_df, rownames.force=NA)
as.data.frame(test)
train <- as(train, "sparseMatrix")
test <- as(test, "sparseMatrix")
as.data.frame(test)
train[,c(1:4,6:17)]
View(train_df)
library(dplyr)
library(lubridate)
indian_batsman_stats <- read.csv(file = 'india_batsman_stats.csv',stringsAsFactors = F)
indian_team_stats <- read.csv(file = 'india_team_stats.csv',stringsAsFactors = F)
indian_batsman_stats$X <- NULL
indian_team_stats$X <- NULL
indian_batsman_stats$teamName <- 'India'
indian_team_stats$date <- as.Date(indian_team_stats$date)
# for matches where player dnb, replace - with 0
indian_batsman_stats$player_name <- ifelse(indian_batsman_stats$player_name	=='-',0,	indian_batsman_stats$player_name)
indian_batsman_stats$teamName <- ifelse(indian_batsman_stats$teamName=='-',0,indian_batsman_stats$teamName)
indian_batsman_stats$runs <- ifelse(indian_batsman_stats$runs=='-',0,indian_batsman_stats$runs)
indian_batsman_stats$balls_faced <- ifelse(indian_batsman_stats$balls_faced=='-',0,indian_batsman_stats$balls_faced)
indian_batsman_stats$X4s <- ifelse(indian_batsman_stats$X4s=='-',0,indian_batsman_stats$X4s)
indian_batsman_stats$X6s <- ifelse(indian_batsman_stats$X6s=='-',0,indian_batsman_stats$X6s)
indian_batsman_stats$strike_rate <- ifelse(indian_batsman_stats$strike_rate=='-',0,indian_batsman_stats$strike_rate)
indian_batsman_stats$innings_number <- ifelse(indian_batsman_stats$innings_number=='-',0,indian_batsman_stats$innings_number)
indian_batsman_stats$opposition <- ifelse(indian_batsman_stats$opposition=='-',0,indian_batsman_stats$opposition)
indian_batsman_stats$match_format <- ifelse(indian_batsman_stats$match_format=='-',0,indian_batsman_stats$match_format)
indian_batsman_stats$venue <- ifelse(indian_batsman_stats$venue=='-',0,indian_batsman_stats$venue)
indian_batsman_stats$date <- ifelse(indian_batsman_stats$date=='-',0,indian_batsman_stats$date)
indian_batsman_stats$city <- ifelse(indian_batsman_stats$city=='-',0,indian_batsman_stats$city)
indian_batsman_stats$batting_position <- ifelse(indian_batsman_stats$batting_position=='-',0,indian_batsman_stats$batting_position)
# there are absent,DNB and - entries
# df <- cbind(indian_batsman_stats$runs,as.integer(indian_batsman_stats$runs)) %>% as.data.frame()
# indian_batsman_stats[which(is.na(df$V2)),]
# convert everything to non-factors
indian_batsman_stats$player_name	     <- as.character(indian_batsman_stats$player_name)
indian_batsman_stats$teamName          <- as.character(indian_batsman_stats$teamName)
indian_batsman_stats$runs              <- as.integer(indian_batsman_stats$runs)
indian_batsman_stats$balls_faced       <- as.integer(indian_batsman_stats$balls_faced)
indian_batsman_stats$X4s               <- as.integer(indian_batsman_stats$X4s)
indian_batsman_stats$X6s               <- as.integer(indian_batsman_stats$X6s)
indian_batsman_stats$strike_rate       <- as.numeric(indian_batsman_stats$strike_rate)
indian_batsman_stats$innings_number    <- as.integer(indian_batsman_stats$innings_number)
indian_batsman_stats$opposition        <- as.character(indian_batsman_stats$opposition)
indian_batsman_stats$match_format      <- as.character(indian_batsman_stats$match_format)
indian_batsman_stats$venue             <- as.character(indian_batsman_stats$venue)
indian_batsman_stats$date              <- as.Date(indian_batsman_stats$date)
indian_batsman_stats$city              <- as.character(indian_batsman_stats$city)
indian_batsman_stats$batting_position  <- as.integer(indian_batsman_stats$batting_position)
indian_batsman_stats$runs <- ifelse(is.na(indian_batsman_stats$runs),0,indian_batsman_stats$runs)
# to get batting position, we will group by date and then assign rank value as batting_position
#indian_batsman_stats <- indian_batsman_stats %>% group_by(date,innings_number) %>%
#  arrange(date,innings_number) %>% dplyr::mutate(rank = rank(player_name)) %>% arrange(date,innings_number,rank)
#indian_batsman_stats$batting_position <- indian_batsman_stats$rank
#indian_batsman_stats$rank <- NULL
india_squad <- c(  'V Kohli',  'RG Sharma',  'S Dhawan',  'AT Rayudu',  'KM Jadhav',  'MS Dhoni',  'JJ Bumrah',  'Mohammed Shami',
'YS Chahal',  'Kuldeep Yadav',  'V Shankar',  'RR Pant',  'S Kaul',  'KL Rahul',  'B Kumar',  'RA Jadeja')
# lets get the stats for these players only
indian_squad_stats <- indian_batsman_stats %>% filter(player_name %in% india_squad) %>% arrange(date,innings_number)
indian_squad_odi_stats <- indian_squad_stats %>% filter(match_format == 'ODI')
# under city, note down which playing country is the venue in. For eg - harare is in 'ZIMBABWE'
# now, lets prepare player wise stats
# no of "Test" "ODI"  "T20I" played before this match in last year that the team played
# so if the player has played in 4 out of the 15 matches played in last 1 year, ratio is 4/15
for( match_number in 1:nrow(indian_squad_odi_stats)){
match_stat <- indian_squad_odi_stats[match_number,]
player_stats <- indian_squad_odi_stats %>% filter(player_name == match_stat$player_name)
date_one_year_back <- match_stat$date %m-% months(12)
matches_played_by_india_last_year <- indian_team_stats %>% filter(date < match_stat$date
& date > date_one_year_back
& match_format == match_stat$match_format) %>% nrow()
last_year_player_stats <- player_stats %>% filter(date < match_stat$date & date > date_one_year_back)
matches_played_last_year <- nrow(last_year_player_stats)
runs_scored_last_year <- sum(last_year_player_stats$runs)
if(matches_played_last_year == 0)
avg_last_year <- 0
else
avg_last_year <- runs_scored_last_year/matches_played_last_year
ratio_of_matches_played_last_year <- matches_played_last_year / matches_played_by_india_last_year
centuries_last_year <- length(which(last_year_player_stats$runs > 100))
half_centuries_last_year <- length(which(last_year_player_stats$runs > 50))
indian_squad_odi_stats[match_number,"ratio_of_matches_played_last_year"] <- ratio_of_matches_played_last_year
indian_squad_odi_stats[match_number,"runs_scored_last_year"] <- runs_scored_last_year
indian_squad_odi_stats[match_number,"avg_last_year"] <- avg_last_year
indian_squad_odi_stats[match_number,"centuries_last_year"] <- centuries_last_year
indian_squad_odi_stats[match_number,"half_centuries_last_year"] <- half_centuries_last_year
indian_squad_odi_stats[match_number,"month"] <- month(match_stat$date)
indian_squad_odi_stats[match_number,"day"] <- day(match_stat$date)
}
df <- indian_squad_odi_stats %>% filter(player_name == 'V Kohli')
df$city <- NULL
df$batting_position <- NULL
training_row_nos <- floor(0.8*nrow(df))
test_row_nos <- training_row_nos + 1
train_df <- df[1:training_row_nos,]
test_df <- df[test_row_nos:nrow(df),]
#### Model 4: XGBoost
train_df$player_name <- NULL
train_df$innings_number <- NULL
train_df$match_format <- NULL
train_df$date <- NULL
colnames(train_df)
train_df$teamName <- NULL
colnames(train_df)
View(train_df)
train<- as.matrix(train_df, rownames.force=NA)
test<- as.matrix(test_df, rownames.force=NA)
train <- as(train, "sparseMatrix")
train[,c(1:2,3:14)]
train<- as.matrix(train_df, rownames.force=NA)
test<- as.matrix(test_df, rownames.force=NA)
train <- as(train, "sparseMatrix")
test <- as(test, "sparseMatrix")
# Never forget to exclude objective variable in 'data option'
train_Data <- xgb.DMatrix(data = train[,c(1:2,3:14)], label = train[,"X4s"])
#### Model 4: XGBoost
library(xgboost)
install.packages("xgboost")
# Never forget to exclude objective variable in 'data option'
train_Data <- xgb.DMatrix(data = train[,c(1:2,3:14)], label = train[,"X4s"])
library(dplyr)
library(lubridate)
indian_batsman_stats <- read.csv(file = 'india_batsman_stats.csv',stringsAsFactors = F)
indian_team_stats <- read.csv(file = 'india_team_stats.csv',stringsAsFactors = F)
indian_batsman_stats$X <- NULL
indian_team_stats$X <- NULL
indian_batsman_stats$teamName <- 'India'
indian_team_stats$date <- as.Date(indian_team_stats$date)
# for matches where player dnb, replace - with 0
indian_batsman_stats$player_name <- ifelse(indian_batsman_stats$player_name	=='-',0,	indian_batsman_stats$player_name)
indian_batsman_stats$teamName <- ifelse(indian_batsman_stats$teamName=='-',0,indian_batsman_stats$teamName)
indian_batsman_stats$runs <- ifelse(indian_batsman_stats$runs=='-',0,indian_batsman_stats$runs)
indian_batsman_stats$balls_faced <- ifelse(indian_batsman_stats$balls_faced=='-',0,indian_batsman_stats$balls_faced)
indian_batsman_stats$X4s <- ifelse(indian_batsman_stats$X4s=='-',0,indian_batsman_stats$X4s)
indian_batsman_stats$X6s <- ifelse(indian_batsman_stats$X6s=='-',0,indian_batsman_stats$X6s)
indian_batsman_stats$strike_rate <- ifelse(indian_batsman_stats$strike_rate=='-',0,indian_batsman_stats$strike_rate)
indian_batsman_stats$innings_number <- ifelse(indian_batsman_stats$innings_number=='-',0,indian_batsman_stats$innings_number)
indian_batsman_stats$opposition <- ifelse(indian_batsman_stats$opposition=='-',0,indian_batsman_stats$opposition)
indian_batsman_stats$match_format <- ifelse(indian_batsman_stats$match_format=='-',0,indian_batsman_stats$match_format)
indian_batsman_stats$venue <- ifelse(indian_batsman_stats$venue=='-',0,indian_batsman_stats$venue)
indian_batsman_stats$date <- ifelse(indian_batsman_stats$date=='-',0,indian_batsman_stats$date)
indian_batsman_stats$city <- ifelse(indian_batsman_stats$city=='-',0,indian_batsman_stats$city)
indian_batsman_stats$batting_position <- ifelse(indian_batsman_stats$batting_position=='-',0,indian_batsman_stats$batting_position)
# there are absent,DNB and - entries
# df <- cbind(indian_batsman_stats$runs,as.integer(indian_batsman_stats$runs)) %>% as.data.frame()
# indian_batsman_stats[which(is.na(df$V2)),]
# convert everything to non-factors
indian_batsman_stats$player_name	     <- as.character(indian_batsman_stats$player_name)
indian_batsman_stats$teamName          <- as.character(indian_batsman_stats$teamName)
indian_batsman_stats$runs              <- as.integer(indian_batsman_stats$runs)
indian_batsman_stats$balls_faced       <- as.integer(indian_batsman_stats$balls_faced)
indian_batsman_stats$X4s               <- as.integer(indian_batsman_stats$X4s)
indian_batsman_stats$X6s               <- as.integer(indian_batsman_stats$X6s)
indian_batsman_stats$strike_rate       <- as.numeric(indian_batsman_stats$strike_rate)
indian_batsman_stats$innings_number    <- as.integer(indian_batsman_stats$innings_number)
indian_batsman_stats$opposition        <- as.character(indian_batsman_stats$opposition)
indian_batsman_stats$match_format      <- as.character(indian_batsman_stats$match_format)
indian_batsman_stats$venue             <- as.character(indian_batsman_stats$venue)
indian_batsman_stats$date              <- as.Date(indian_batsman_stats$date)
indian_batsman_stats$city              <- as.character(indian_batsman_stats$city)
indian_batsman_stats$batting_position  <- as.integer(indian_batsman_stats$batting_position)
indian_batsman_stats$runs <- ifelse(is.na(indian_batsman_stats$runs),0,indian_batsman_stats$runs)
# to get batting position, we will group by date and then assign rank value as batting_position
#indian_batsman_stats <- indian_batsman_stats %>% group_by(date,innings_number) %>%
#  arrange(date,innings_number) %>% dplyr::mutate(rank = rank(player_name)) %>% arrange(date,innings_number,rank)
#indian_batsman_stats$batting_position <- indian_batsman_stats$rank
#indian_batsman_stats$rank <- NULL
india_squad <- c(  'V Kohli',  'RG Sharma',  'S Dhawan',  'AT Rayudu',  'KM Jadhav',  'MS Dhoni',  'JJ Bumrah',  'Mohammed Shami',
'YS Chahal',  'Kuldeep Yadav',  'V Shankar',  'RR Pant',  'S Kaul',  'KL Rahul',  'B Kumar',  'RA Jadeja')
# lets get the stats for these players only
indian_squad_stats <- indian_batsman_stats %>% filter(player_name %in% india_squad) %>% arrange(date,innings_number)
indian_squad_odi_stats <- indian_squad_stats %>% filter(match_format == 'ODI')
# under city, note down which playing country is the venue in. For eg - harare is in 'ZIMBABWE'
# now, lets prepare player wise stats
# no of "Test" "ODI"  "T20I" played before this match in last year that the team played
# so if the player has played in 4 out of the 15 matches played in last 1 year, ratio is 4/15
for( match_number in 1:nrow(indian_squad_odi_stats)){
match_stat <- indian_squad_odi_stats[match_number,]
player_stats <- indian_squad_odi_stats %>% filter(player_name == match_stat$player_name)
date_one_year_back <- match_stat$date %m-% months(12)
matches_played_by_india_last_year <- indian_team_stats %>% filter(date < match_stat$date
& date > date_one_year_back
& match_format == match_stat$match_format) %>% nrow()
last_year_player_stats <- player_stats %>% filter(date < match_stat$date & date > date_one_year_back)
matches_played_last_year <- nrow(last_year_player_stats)
runs_scored_last_year <- sum(last_year_player_stats$runs)
if(matches_played_last_year == 0)
avg_last_year <- 0
else
avg_last_year <- runs_scored_last_year/matches_played_last_year
ratio_of_matches_played_last_year <- matches_played_last_year / matches_played_by_india_last_year
centuries_last_year <- length(which(last_year_player_stats$runs > 100))
half_centuries_last_year <- length(which(last_year_player_stats$runs > 50))
indian_squad_odi_stats[match_number,"ratio_of_matches_played_last_year"] <- ratio_of_matches_played_last_year
indian_squad_odi_stats[match_number,"runs_scored_last_year"] <- runs_scored_last_year
indian_squad_odi_stats[match_number,"avg_last_year"] <- avg_last_year
indian_squad_odi_stats[match_number,"centuries_last_year"] <- centuries_last_year
indian_squad_odi_stats[match_number,"half_centuries_last_year"] <- half_centuries_last_year
indian_squad_odi_stats[match_number,"month"] <- month(match_stat$date)
indian_squad_odi_stats[match_number,"day"] <- day(match_stat$date)
}
# build models for every player
df <- indian_squad_odi_stats %>% filter(player_name == 'V Kohli')
df$city <- NULL
df$batting_position <- NULL
df$match_format <- as.factor(df$match_format)
df$venue <- as.factor(df$venue)
df$opposition <- as.factor(df$opposition)
training_row_nos <- floor(0.8*nrow(df))
test_row_nos <- training_row_nos + 1
train_df <- df[1:training_row_nos,]
test_df <- df[test_row_nos:nrow(df),]
colnames(df)
unique(df$match_format)
unique(df$day)
train_df$player_name <- NULL
train_df$innings_number <- NULL
train_df$match_format <- NULL
train_df$teamName <- NULL
colnames(train_df)
View(train_df)
train<- sparse.model.matrix(X4s~.-3, data = train_df)
train<- sparse.model.matrix(X4s~.-3, data = train_df)
install.packages("Matrix")
train<- sparse.model.matrix(X4s~.-3, data = train_df)
library(Matrix)
train<- sparse.model.matrix(X4s~.-3, data = train_df)
library(dplyr)
library(lubridate)
indian_batsman_stats <- read.csv(file = 'india_batsman_stats.csv',stringsAsFactors = F)
indian_team_stats <- read.csv(file = 'india_team_stats.csv',stringsAsFactors = F)
indian_batsman_stats$X <- NULL
indian_team_stats$X <- NULL
indian_batsman_stats$teamName <- 'India'
indian_team_stats$date <- as.Date(indian_team_stats$date)
# for matches where player dnb, replace - with 0
indian_batsman_stats$player_name <- ifelse(indian_batsman_stats$player_name	=='-',0,	indian_batsman_stats$player_name)
indian_batsman_stats$teamName <- ifelse(indian_batsman_stats$teamName=='-',0,indian_batsman_stats$teamName)
indian_batsman_stats$runs <- ifelse(indian_batsman_stats$runs=='-',0,indian_batsman_stats$runs)
indian_batsman_stats$balls_faced <- ifelse(indian_batsman_stats$balls_faced=='-',0,indian_batsman_stats$balls_faced)
indian_batsman_stats$X4s <- ifelse(indian_batsman_stats$X4s=='-',0,indian_batsman_stats$X4s)
indian_batsman_stats$X6s <- ifelse(indian_batsman_stats$X6s=='-',0,indian_batsman_stats$X6s)
indian_batsman_stats$strike_rate <- ifelse(indian_batsman_stats$strike_rate=='-',0,indian_batsman_stats$strike_rate)
indian_batsman_stats$innings_number <- ifelse(indian_batsman_stats$innings_number=='-',0,indian_batsman_stats$innings_number)
indian_batsman_stats$opposition <- ifelse(indian_batsman_stats$opposition=='-',0,indian_batsman_stats$opposition)
indian_batsman_stats$match_format <- ifelse(indian_batsman_stats$match_format=='-',0,indian_batsman_stats$match_format)
indian_batsman_stats$venue <- ifelse(indian_batsman_stats$venue=='-',0,indian_batsman_stats$venue)
indian_batsman_stats$date <- ifelse(indian_batsman_stats$date=='-',0,indian_batsman_stats$date)
indian_batsman_stats$city <- ifelse(indian_batsman_stats$city=='-',0,indian_batsman_stats$city)
indian_batsman_stats$batting_position <- ifelse(indian_batsman_stats$batting_position=='-',0,indian_batsman_stats$batting_position)
# there are absent,DNB and - entries
# df <- cbind(indian_batsman_stats$runs,as.integer(indian_batsman_stats$runs)) %>% as.data.frame()
# indian_batsman_stats[which(is.na(df$V2)),]
# convert everything to non-factors
indian_batsman_stats$player_name	     <- as.character(indian_batsman_stats$player_name)
indian_batsman_stats$teamName          <- as.character(indian_batsman_stats$teamName)
indian_batsman_stats$runs              <- as.integer(indian_batsman_stats$runs)
indian_batsman_stats$balls_faced       <- as.integer(indian_batsman_stats$balls_faced)
indian_batsman_stats$X4s               <- as.integer(indian_batsman_stats$X4s)
indian_batsman_stats$X6s               <- as.integer(indian_batsman_stats$X6s)
indian_batsman_stats$strike_rate       <- as.numeric(indian_batsman_stats$strike_rate)
indian_batsman_stats$innings_number    <- as.integer(indian_batsman_stats$innings_number)
indian_batsman_stats$opposition        <- as.character(indian_batsman_stats$opposition)
indian_batsman_stats$match_format      <- as.character(indian_batsman_stats$match_format)
indian_batsman_stats$venue             <- as.character(indian_batsman_stats$venue)
indian_batsman_stats$date              <- as.Date(indian_batsman_stats$date)
indian_batsman_stats$city              <- as.character(indian_batsman_stats$city)
indian_batsman_stats$batting_position  <- as.integer(indian_batsman_stats$batting_position)
indian_batsman_stats$runs <- ifelse(is.na(indian_batsman_stats$runs),0,indian_batsman_stats$runs)
# to get batting position, we will group by date and then assign rank value as batting_position
#indian_batsman_stats <- indian_batsman_stats %>% group_by(date,innings_number) %>%
#  arrange(date,innings_number) %>% dplyr::mutate(rank = rank(player_name)) %>% arrange(date,innings_number,rank)
#indian_batsman_stats$batting_position <- indian_batsman_stats$rank
#indian_batsman_stats$rank <- NULL
india_squad <- c(  'V Kohli',  'RG Sharma',  'S Dhawan',  'AT Rayudu',  'KM Jadhav',  'MS Dhoni',  'JJ Bumrah',  'Mohammed Shami',
'YS Chahal',  'Kuldeep Yadav',  'V Shankar',  'RR Pant',  'S Kaul',  'KL Rahul',  'B Kumar',  'RA Jadeja')
# lets get the stats for these players only
indian_squad_stats <- indian_batsman_stats %>% filter(player_name %in% india_squad) %>% arrange(date,innings_number)
indian_squad_odi_stats <- indian_squad_stats %>% filter(match_format == 'ODI')
# under city, note down which playing country is the venue in. For eg - harare is in 'ZIMBABWE'
# now, lets prepare player wise stats
# no of "Test" "ODI"  "T20I" played before this match in last year that the team played
# so if the player has played in 4 out of the 15 matches played in last 1 year, ratio is 4/15
for( match_number in 1:nrow(indian_squad_odi_stats)){
match_stat <- indian_squad_odi_stats[match_number,]
player_stats <- indian_squad_odi_stats %>% filter(player_name == match_stat$player_name)
date_one_year_back <- match_stat$date %m-% months(12)
matches_played_by_india_last_year <- indian_team_stats %>% filter(date < match_stat$date
& date > date_one_year_back
& match_format == match_stat$match_format) %>% nrow()
last_year_player_stats <- player_stats %>% filter(date < match_stat$date & date > date_one_year_back)
matches_played_last_year <- nrow(last_year_player_stats)
runs_scored_last_year <- sum(last_year_player_stats$runs)
if(matches_played_last_year == 0)
avg_last_year <- 0
else
avg_last_year <- runs_scored_last_year/matches_played_last_year
ratio_of_matches_played_last_year <- matches_played_last_year / matches_played_by_india_last_year
centuries_last_year <- length(which(last_year_player_stats$runs > 100))
half_centuries_last_year <- length(which(last_year_player_stats$runs > 50))
indian_squad_odi_stats[match_number,"ratio_of_matches_played_last_year"] <- ratio_of_matches_played_last_year
indian_squad_odi_stats[match_number,"runs_scored_last_year"] <- runs_scored_last_year
indian_squad_odi_stats[match_number,"avg_last_year"] <- avg_last_year
indian_squad_odi_stats[match_number,"centuries_last_year"] <- centuries_last_year
indian_squad_odi_stats[match_number,"half_centuries_last_year"] <- half_centuries_last_year
indian_squad_odi_stats[match_number,"month"] <- month(match_stat$date)
indian_squad_odi_stats[match_number,"day"] <- day(match_stat$date)
}
library(dplyr)
library(lubridate)
indian_batsman_stats <- read.csv(file = 'india_batsman_stats.csv',stringsAsFactors = F)
indian_team_stats <- read.csv(file = 'india_team_stats.csv',stringsAsFactors = F)
indian_batsman_stats$X <- NULL
indian_team_stats$X <- NULL
indian_batsman_stats$teamName <- 'India'
indian_team_stats$date <- as.Date(indian_team_stats$date)
# for matches where player dnb, replace - with 0
indian_batsman_stats$player_name <- ifelse(indian_batsman_stats$player_name	=='-',0,	indian_batsman_stats$player_name)
indian_batsman_stats$teamName <- ifelse(indian_batsman_stats$teamName=='-',0,indian_batsman_stats$teamName)
indian_batsman_stats$runs <- ifelse(indian_batsman_stats$runs=='-',0,indian_batsman_stats$runs)
indian_batsman_stats$balls_faced <- ifelse(indian_batsman_stats$balls_faced=='-',0,indian_batsman_stats$balls_faced)
indian_batsman_stats$X4s <- ifelse(indian_batsman_stats$X4s=='-',0,indian_batsman_stats$X4s)
indian_batsman_stats$X6s <- ifelse(indian_batsman_stats$X6s=='-',0,indian_batsman_stats$X6s)
indian_batsman_stats$strike_rate <- ifelse(indian_batsman_stats$strike_rate=='-',0,indian_batsman_stats$strike_rate)
indian_batsman_stats$innings_number <- ifelse(indian_batsman_stats$innings_number=='-',0,indian_batsman_stats$innings_number)
indian_batsman_stats$opposition <- ifelse(indian_batsman_stats$opposition=='-',0,indian_batsman_stats$opposition)
indian_batsman_stats$match_format <- ifelse(indian_batsman_stats$match_format=='-',0,indian_batsman_stats$match_format)
indian_batsman_stats$venue <- ifelse(indian_batsman_stats$venue=='-',0,indian_batsman_stats$venue)
indian_batsman_stats$date <- ifelse(indian_batsman_stats$date=='-',0,indian_batsman_stats$date)
indian_batsman_stats$city <- ifelse(indian_batsman_stats$city=='-',0,indian_batsman_stats$city)
indian_batsman_stats$batting_position <- ifelse(indian_batsman_stats$batting_position=='-',0,indian_batsman_stats$batting_position)
# there are absent,DNB and - entries
# df <- cbind(indian_batsman_stats$runs,as.integer(indian_batsman_stats$runs)) %>% as.data.frame()
# indian_batsman_stats[which(is.na(df$V2)),]
# convert everything to non-factors
indian_batsman_stats$player_name	     <- as.character(indian_batsman_stats$player_name)
indian_batsman_stats$teamName          <- as.character(indian_batsman_stats$teamName)
indian_batsman_stats$runs              <- as.integer(indian_batsman_stats$runs)
indian_batsman_stats$balls_faced       <- as.integer(indian_batsman_stats$balls_faced)
indian_batsman_stats$X4s               <- as.integer(indian_batsman_stats$X4s)
indian_batsman_stats$X6s               <- as.integer(indian_batsman_stats$X6s)
indian_batsman_stats$strike_rate       <- as.numeric(indian_batsman_stats$strike_rate)
indian_batsman_stats$innings_number    <- as.integer(indian_batsman_stats$innings_number)
indian_batsman_stats$opposition        <- as.character(indian_batsman_stats$opposition)
indian_batsman_stats$match_format      <- as.character(indian_batsman_stats$match_format)
indian_batsman_stats$venue             <- as.character(indian_batsman_stats$venue)
indian_batsman_stats$date              <- as.Date(indian_batsman_stats$date)
indian_batsman_stats$city              <- as.character(indian_batsman_stats$city)
indian_batsman_stats$batting_position  <- as.integer(indian_batsman_stats$batting_position)
indian_batsman_stats$runs <- ifelse(is.na(indian_batsman_stats$runs),0,indian_batsman_stats$runs)
# to get batting position, we will group by date and then assign rank value as batting_position
#indian_batsman_stats <- indian_batsman_stats %>% group_by(date,innings_number) %>%
#  arrange(date,innings_number) %>% dplyr::mutate(rank = rank(player_name)) %>% arrange(date,innings_number,rank)
#indian_batsman_stats$batting_position <- indian_batsman_stats$rank
#indian_batsman_stats$rank <- NULL
india_squad <- c(  'V Kohli',  'RG Sharma',  'S Dhawan',  'AT Rayudu',  'KM Jadhav',  'MS Dhoni',  'JJ Bumrah',  'Mohammed Shami',
'YS Chahal',  'Kuldeep Yadav',  'V Shankar',  'RR Pant',  'S Kaul',  'KL Rahul',  'B Kumar',  'RA Jadeja')
# lets get the stats for these players only
indian_squad_stats <- indian_batsman_stats %>% filter(player_name %in% india_squad) %>% arrange(date,innings_number)
indian_squad_odi_stats <- indian_squad_stats %>% filter(match_format == 'ODI')
# under city, note down which playing country is the venue in. For eg - harare is in 'ZIMBABWE'
# now, lets prepare player wise stats
# no of "Test" "ODI"  "T20I" played before this match in last year that the team played
# so if the player has played in 4 out of the 15 matches played in last 1 year, ratio is 4/15
for( match_number in 1:nrow(indian_squad_odi_stats)){
match_stat <- indian_squad_odi_stats[match_number,]
player_stats <- indian_squad_odi_stats %>% filter(player_name == match_stat$player_name)
date_one_year_back <- match_stat$date %m-% months(12)
matches_played_by_india_last_year <- indian_team_stats %>% filter(date < match_stat$date
& date > date_one_year_back
& match_format == match_stat$match_format) %>% nrow()
last_year_player_stats <- player_stats %>% filter(date < match_stat$date & date > date_one_year_back)
matches_played_last_year <- nrow(last_year_player_stats)
runs_scored_last_year <- sum(last_year_player_stats$runs)
if(matches_played_last_year == 0)
avg_last_year <- 0
else
avg_last_year <- runs_scored_last_year/matches_played_last_year
ratio_of_matches_played_last_year <- matches_played_last_year / matches_played_by_india_last_year
centuries_last_year <- length(which(last_year_player_stats$runs > 100))
half_centuries_last_year <- length(which(last_year_player_stats$runs > 50))
indian_squad_odi_stats[match_number,"ratio_of_matches_played_last_year"] <- ratio_of_matches_played_last_year
indian_squad_odi_stats[match_number,"runs_scored_last_year"] <- runs_scored_last_year
indian_squad_odi_stats[match_number,"avg_last_year"] <- avg_last_year
indian_squad_odi_stats[match_number,"centuries_last_year"] <- centuries_last_year
indian_squad_odi_stats[match_number,"half_centuries_last_year"] <- half_centuries_last_year
indian_squad_odi_stats[match_number,"month"] <- month(match_stat$date)
indian_squad_odi_stats[match_number,"day"] <- day(match_stat$date)
}
# build models for every player
df <- indian_squad_odi_stats %>% filter(player_name == 'V Kohli')
df$city <- NULL
df$batting_position <- NULL
df$venue <- as.factor(df$venue)
df$opposition <- as.factor(df$opposition)
training_row_nos <- floor(0.8*nrow(df))
test_row_nos <- training_row_nos + 1
train_df <- df[1:training_row_nos,]
test_df <- df[test_row_nos:nrow(df),]
#### Model 4: XGBoost
library(xgboost)
library(Matrix)
train_df$player_name <- NULL
train_df$innings_number <- NULL
train_df$match_format <- NULL
train_df$teamName <- NULL
getwd()
install.packages("Matrix")
install.packages("Matrix")
install.packages("Matrix")
install.packages("Matrix")
install.packages("Matrix")
install.packages("Matrix")
install.packages("Matrix")
rm(list = ls())
save.image()
